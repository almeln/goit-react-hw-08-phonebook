{"version":3,"sources":["views/Views.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","views/ContactsView.js"],"names":["module","exports","getItems","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","console","log","handleInputChange","event","currentTarget","value","reset","Form","className","css","form","onSubmit","preventDefault","find","toast","error","addContact","Group","controlId","Label","Control","formInput","type","onChange","pattern","title","required","placeholder","Button","formInputBtn","Filter","InputGroup","filterInput","changeFilter","target","ContactItem","onDelete","contactItemName","contactItemNumber","variant","onClick","ContactList","map","id","contactItem","deleteContact","onDeleteContact","ContactsView","useEffect","fetchContacts","Container"],"mappings":"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","file":"static/js/3.82cf0329.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Views_container__3mGKw\",\"title\":\"Views_title__IrV9G\",\"form\":\"Views_form__2JevY\",\"button\":\"Views_button__iFCA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3LKxP\",\"formInput\":\"ContactForm_formInput__2ZiUu\",\"formInputLabel\":\"ContactForm_formInputLabel__23MH8\",\"formInputBtn\":\"ContactForm_formInputBtn__2igxL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__1ReSp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItemName\":\"ContactItem_contactItemName__Bng2u\",\"contactItemNumber\":\"ContactItem_contactItemNumber__1saHA\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getItems = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\n// Мемоизация\nexport const getVisibleContacts = createSelector(\n  [getItems, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { getItems } from 'redux/contacts/contacts-selectors';\n\nimport css from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getItems);\n\n  const dispatch = useDispatch();\n\n  console.log(name);\n\n  const handleInputChange = event => {\n    console.log(number);\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const doubleContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (doubleContact) {\n      toast.error(`${name} is alredy in contacts.`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Form className={css.form} onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"formGroupName\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control className={css.formInput}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Enter name\"\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"formGroupNumber\">\n          <Form.Label>Number</Form.Label>\n          <Form.Control className={css.formInput}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          placeholder=\"Enter number\" />\n        </Form.Group>\n        <Button type=\"submit\" className={css.formInputBtn}>Add contact</Button>\n\n      </Form>\n    </>\n  );\n}\n","import React from 'react';\nimport css from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup'\n\nimport { changeFilter } from 'redux/contacts/contacts-actions';\nimport { getFilter } from 'redux/contacts/contacts-selectors';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n    <Form.Label>Find contacts by name</Form.Label>\n    <InputGroup>\n      <Form.Control\n        className={css.filterInput}\n        type=\"text\"\n        value={filter}\n        onChange={event => dispatch(changeFilter(event.target.value))}>\n      </Form.Control>\n    </InputGroup>\n    </>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\n\n\nimport css from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, onDelete }) => (\n  <>\n    <p>\n      <span className={css.contactItemName}>{name}:</span>\n      <span className={css.contactItemNumber}>{number}</span>\n      <Button variant=\"outline-primary\" type=\"button\" onClick={onDelete}>\n        Delete\n      </Button>\n    </p>\n  </>\n);\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport css from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport { getVisibleContacts } from 'redux/contacts/contacts-selectors';\n\nimport ContactItem from 'components/ContactItem';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={css.contactItem}>\n          <ContactItem\n            name={name}\n            number={number}\n            onDelete={() => onDeleteContact(id)}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Container from 'react-bootstrap/Container'\r\nimport { Toaster } from 'react-hot-toast';\r\nimport ContactForm from \"components/ContactForm\";\r\nimport Filter from \"components/Filter\";\r\nimport ContactList from \"components/ContactList\";\r\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\r\nimport css from './Views.module.css';\r\n\r\n\r\nexport default function ContactsView() {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => dispatch(fetchContacts()), [dispatch]);\r\n\r\n    return (\r\n        <Container>\r\n            <Toaster/>\r\n            <h1 className={css.title}>Phonebook</h1>\r\n            <ContactForm></ContactForm>\r\n            <h2 className={css.title}>Contacts</h2>\r\n            <Filter></Filter>\r\n            <ContactList></ContactList>\r\n        </Container>\r\n    )\r\n}"],"sourceRoot":""}